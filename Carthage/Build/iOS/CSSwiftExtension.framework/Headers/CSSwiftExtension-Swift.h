// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSFileManager (SWIFT_EXTENSION(CSSwiftExtension))
- (NSString * _Nonnull)cs_homeDirectory;
- (NSString * _Nonnull)cs_tempDirectory;
- (NSString * _Nonnull)cs_documentsDirectory;
- (NSString * _Nonnull)cs_libraryDirectory;
- (NSString * _Nonnull)cs_cacheDirectory;
@end


@interface UIApplication (SWIFT_EXTENSION(CSSwiftExtension))
- (NSString * _Nonnull)cs_appVersion;
@end

@class UIView;
@class UIImage;

@interface UIApplication (SWIFT_EXTENSION(CSSwiftExtension))
- (UIImage * _Nonnull)cs_snapShot:(UIView * _Nonnull)inView;
@end

@protocol UIApplicationDelegate;
@class UIViewController;

@interface UIApplication (SWIFT_EXTENSION(CSSwiftExtension))
- (id <UIApplicationDelegate> _Nonnull)cs_appDelegate;
- (UIViewController * _Nonnull)cs_currentViewController;
@end


@interface UIColor (SWIFT_EXTENSION(CSSwiftExtension))
- (nonnull instancetype)initWithHexString:(uint32_t)hexString alpha:(CGFloat)alpha;
@end


@interface UIDevice (SWIFT_EXTENSION(CSSwiftExtension))
- (NSString * _Nonnull)cs_currentLanguage;
- (BOOL)cs_isCurrentLanguage_en;
- (BOOL)cs_isCurrentLanguage_zh_Hans;
- (BOOL)cs_isCurrentLanguage_zh_Hant;
- (BOOL)cs_isCurrentLanguage_ja;
- (BOOL)cs_isCurrentLanguage_ko;
@end


@interface UIDevice (SWIFT_EXTENSION(CSSwiftExtension))
- (CGSize)cs_screenSize;
- (BOOL)cs_isIPhone4s;
- (BOOL)cs_isIPhone5;
- (BOOL)cs_isIPhone6;
- (BOOL)cs_isIPhone6Plus;
- (BOOL)cs_isIPhone6PlusBigMode;
- (BOOL)cs_isIPadAir2;
- (BOOL)cs_isIPadPro;
@end


@interface UIImage (SWIFT_EXTENSION(CSSwiftExtension))
/**
  Save UIImage to file
  \param filePath file path

  \param compressionFactor compression factor, only useful for JPEG format image.


  returns:
  true or false
*/
- (BOOL)cs_saveImageToFileWithFilePath:(NSString * _Nonnull)filePath compressionFactor:(CGFloat)compressionFactor;
@end


@interface UIImage (SWIFT_EXTENSION(CSSwiftExtension))
- (UIImage * _Nonnull)cs_wechatShareThumbnail;
@end


@interface UIImage (SWIFT_EXTENSION(CSSwiftExtension))
/**
  UIImage init from an URL string
  \param urlString URL string


  returns:
  UIImage
*/
- (nonnull instancetype)initWithUrlString:(NSString * _Nonnull)urlString;
/**
  UIImage init from pure color
  \param pureColor pure color

  \param targetSize targetSize


  returns:
  UIImage
*/
- (nonnull instancetype)initWithPureColor:(UIColor * _Nonnull)pureColor targetSize:(CGSize)targetSize;
@end


@interface UIImage (SWIFT_EXTENSION(CSSwiftExtension))
/**
  Crop UIImage

  returns:
  UIImage cropped
*/
- (UIImage * _Nonnull)cs_imageCroppedWithBounds:(CGRect)bounds;
/**
  Crop UIImage to fit target size

  returns:
  UIImage cropped
*/
- (UIImage * _Nonnull)cs_imageCroppedToFitWithTargetSize:(CGSize)targetSize;
/**
  Mirror UIImage

  returns:
  UIImage mirrored
*/
- (UIImage * _Nonnull)cs_imageMirrored;
/**
  Rotate UIImage to specified degress
  \param degress degress to rotate


  returns:
  UIImage rotated
*/
- (UIImage * _Nonnull)cs_imageRotatedByDegreesWithDegrees:(CGFloat)degrees;
/**
  Scale UIImage to specified size.
  \param targetSize targetSize

  \param withOriginalRatio whether the result UIImage should keep the original ratio


  returns:
  UIImage scaled
*/
- (UIImage * _Nonnull)cs_imageScaledToSizeWithTargetSize:(CGSize)targetSize withOriginalRatio:(BOOL)withOriginalRatio;
/**
  UIImage with corner radius without Off-Screen Rendering.
  Much better than setting layer.cornerRadius and layer.masksToBounds.
  \param cornerRadius corner radius


  returns:
  UIImage
*/
- (UIImage * _Nonnull)cs_imageWithCornerRadiusWithCornerRadius:(CGFloat)cornerRadius;
- (UIImage * _Nonnull)cs_imageWithNormalOrientation;
- (UIImage * _Nonnull)cs_grayScale;
@end


@interface UIImageView (SWIFT_EXTENSION(CSSwiftExtension))
- (nonnull instancetype)initWithFrame:(CGRect)frame blurEffectStyle:(UIBlurEffectStyle)blurEffectStyle;
@end


@interface UIView (SWIFT_EXTENSION(CSSwiftExtension))
- (UIImage * _Nonnull)cs_snapShot;
@end


@interface UIView (SWIFT_EXTENSION(CSSwiftExtension))
@property (nonatomic) CGFloat cs_left;
@property (nonatomic) CGFloat cs_right;
@property (nonatomic) CGFloat cs_top;
@property (nonatomic) CGFloat cs_bottom;
@property (nonatomic) CGFloat cs_width;
@property (nonatomic) CGFloat cs_height;
@end

#pragma clang diagnostic pop
